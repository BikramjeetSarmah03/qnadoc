// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @map("_id")

  email String @unique

  files   File[]
  message Message[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_currennt_period_env")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name String

  uploadStatus UploadStatus @default(PENDING)

  url String
  key String

  message Message[]

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  text String

  isUserMessage Boolean

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  fileId String @db.ObjectId
  file   File   @relation(fields: [fileId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
